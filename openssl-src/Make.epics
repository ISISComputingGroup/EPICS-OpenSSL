# Note: called Make.epics rather than Makefile.epics due to .gitignore rule

TOP=..

include $(TOP)/configure/CONFIG
#----------------------------------------
#  ADD MACRO DEFINITIONS AFTER THIS LINE
#=============================

#==================================================
# build a support library

# remove EPICS default of -w which nmake does not like
override MAKEFLAGS=

ifeq ($(OS_CLASS),WIN32)
ifneq ($(findstring win32-x86,$(EPICS_HOST_ARCH)),)
OPENSSL_ARCH=VC-WIN32
LIBARCH=32
else
OPENSSL_ARCH=VC-WIN64A
LIBARCH=64
endif
else
OPENSSL_ARCH=linux-x86_64
endif

ifneq ($(findstring static,$(EPICS_HOST_ARCH)),)
CONFIG_FLAGS += no-shared
LIBSFX=MT
else
LIBSFX=MD
# we install zlib so OpenSSL.exe can work if called directly without zlib in PATH
# not strictly needed for epics, but convenient
BIN_INSTALLS_WIN32 += $(ZLIB)/bin/$(EPICS_HOST_ARCH)/*.dll
endif
ifneq ($(findstring debug,$(EPICS_HOST_ARCH)),)
CONFIG_FLAGS += --debug
LIBSFX := $(LIBSFX)d
endif

#===========================

include $(TOP)/configure/RULES
#----------------------------------------
#  ADD RULES AFTER THIS LINE

# linux-elf --debug --release no-shared
#	--with-zlib-include
#	--with-zlib-lib
# look at sepcifying shared and no-shared
# we copy libraries to "MDd" etc. to help cmake find the libraries later
ifdef T_A
install:
ifeq ($(OS_CLASS),Linux)
	$(CP) config.sh config
endif
	-$(MKDIR) O.$(T_A)
	( cd O.$(T_A) && $(PERL) ../Configure $(OPENSSL_ARCH) $(CONFIG_FLAGS) no-asm zlib --prefix=$(abspath $(TOP)/install/$(T_A)) --openssldir=$(abspath $(TOP)/install/conf) --with-zlib-include=$(ZLIB)/include --with-zlib-lib=$(ZLIB)/lib/$(T_A)/zlib.lib )
ifeq ($(OS_CLASS),WIN32)
	( cd O.$(T_A) && nmake )
	( cd O.$(T_A) && nmake install )
else
	( cd O.$(T_A) && make )
	( cd O.$(T_A) && make install )
endif
	-$(MKDIR) $(TOP)/bin
	-$(MKDIR) $(TOP)/bin/$(T_A)
	-$(MKDIR) $(TOP)/lib
	-$(MKDIR) $(TOP)/lib/$(T_A)
	-$(MKDIR) $(TOP)/include
	-$(MKDIR) $(TOP)/include/openssl
	$(CP) -f $(TOP)/install/$(T_A)/include/openssl/*.h* $(TOP)/include/openssl/
	$(CP) -f $(TOP)/install/$(T_A)/bin/* $(TOP)/bin/$(T_A)/
ifeq ($(OS_CLASS),WIN32)
	$(CP) -f $(TOP)/install/$(T_A)/lib/*.lib $(TOP)/lib/$(T_A)/
	$(CP) -f $(TOP)/install/$(T_A)/lib/libcrypto.lib $(TOP)/lib/$(T_A)/libcrypto$(LIBARCH)$(LIBSFX).lib
	$(CP) -f $(TOP)/install/$(T_A)/lib/libssl.lib $(TOP)/lib/$(T_A)/libssl$(LIBARCH)$(LIBSFX).lib
	$(CP) -f $(TOP)/install/$(T_A)/lib/engines-1_1/* $(TOP)/bin/$(T_A)/
else
	-$(CP) -f $(TOP)/install/$(T_A)/lib/*.a $(TOP)/lib/$(T_A)/
	-$(CP) -f $(TOP)/install/$(T_A)/lib/*.so $(TOP)/lib/$(T_A)/
endif
endif

ifeq ($(findstring linux,$(EPICS_HOST_ARCH)),)
ifeq ($(BASE_3_14),YES)
clean:: myclean
else
clean: myclean
endif
endif

myclean:
	-$(RM) O.$(EPICS_HOST_ARCH)
